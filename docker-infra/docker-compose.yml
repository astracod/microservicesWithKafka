services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    networks:
      kafka-net:
        aliases:
          - zookeeper.local
    environment:
      - ZOO_4LW_COMMANDS_WHITELIST=*
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: ["CMD-SHELL", "echo stat | nc 127.0.0.1 2181 | grep Mode"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:3.4
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      kafka-net:
        aliases:
          - kafka.local
    environment:
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka.local:9092,PLAINTEXT_HOST://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper.local:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka.local:9092 --list"]
      interval: 20s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  kowl:
    image: quay.io/cloudhut/kowl:latest
    ports:
      - "8081:8080"
    environment:
      - KAFKA_BROKERS=kafka.local:9092
    networks:
      - kafka-net
    depends_on:
      - kafka
    restart: unless-stopped

  postgres:
    image: postgres:13
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kafka-net
    restart: unless-stopped

networks:
  kafka-net:
    driver: bridge

volumes:
  postgres_data:
  kafka_data:
